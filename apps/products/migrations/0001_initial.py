# Generated by Django 5.1.7 on 2025-06-02 16:45

import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="InventoryTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("ADD", "Add to Total"),
                            ("ACTIVATE", "Move to Available"),
                            ("ESCROW", "Place in Escrow"),
                            ("COMPLETE", "Complete Transaction"),
                            ("CANCEL", "Cancel Escrow"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("previous_total", models.IntegerField()),
                ("previous_available", models.IntegerField()),
                ("previous_in_escrow", models.IntegerField()),
                ("new_total", models.IntegerField()),
                ("new_available", models.IntegerField()),
                ("new_in_escrow", models.IntegerField()),
                ("notes", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "Inventory Transaction",
                "db_table": "inventory_transaction",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NegotiationHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("price_offered", "Price Offered"),
                            ("price_accepted", "Price Accepted"),
                            ("price_rejected", "Price Rejected"),
                            ("price_countered", "Price Countered"),
                            ("price_updated", "Price Updated"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Negotiation histories",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="PriceNegotiation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "original_price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("offered_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "final_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("countered", "Countered"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("offered_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("slug", models.SlugField(blank=True, max_length=255)),
                (
                    "short_code",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=200,
                        null=True,
                        unique=True,
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "original_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "escrow_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("location", models.CharField(blank=True, max_length=200)),
                ("is_active", models.BooleanField(default=True)),
                ("total_inventory", models.IntegerField(default=0)),
                ("available_inventory", models.IntegerField(default=0)),
                ("in_escrow_inventory", models.IntegerField(default=0)),
                ("negotiable", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("sold", "Sold"),
                        ],
                        default="draft",
                        max_length=12,
                    ),
                ),
                ("brand", models.CharField(blank=True, max_length=100)),
                ("model", models.CharField(blank=True, max_length=100)),
                ("material", models.CharField(blank=True, max_length=100)),
                ("color", models.CharField(blank=True, max_length=50)),
                ("dimensions", models.CharField(blank=True, max_length=100)),
                ("style", models.CharField(blank=True, max_length=100)),
                ("authenticity_guaranteed", models.BooleanField(default=False)),
                ("specifications", models.JSONField(blank=True, default=dict)),
                ("features", models.JSONField(blank=True, default=list)),
                ("details", models.JSONField(blank=True, default=list)),
            ],
            options={
                "verbose_name_plural": "Products",
                "db_table": "products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductCondition",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "verbose_name_plural": "Product Conditions",
                "db_table": "product_conditions",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("image_url", models.URLField()),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                ("is_primary", models.BooleanField(default=False)),
                ("display_order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "Product Images",
                "db_table": "product_images",
                "ordering": ["display_order"],
            },
        ),
        migrations.CreateModel(
            name="ProductMeta",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("views_count", models.PositiveIntegerField(default=0)),
                ("featured", models.BooleanField(default=False)),
                ("total_shares", models.PositiveIntegerField(default=0)),
                ("seo_keywords", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name_plural": "Product Meta",
                "db_table": "product_meta",
                "ordering": ["-views_count"],
            },
        ),
        migrations.CreateModel(
            name="ProductRating",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review", models.TextField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=200)),
                (
                    "is_verified_purchase",
                    models.BooleanField(db_index=True, default=False),
                ),
                ("purchase_date", models.DateTimeField(blank=True, null=True)),
                ("is_approved", models.BooleanField(db_index=True, default=True)),
                ("is_flagged", models.BooleanField(db_index=True, default=False)),
                ("flagged_reason", models.CharField(blank=True, max_length=100)),
                (
                    "helpful_count",
                    models.PositiveIntegerField(db_index=True, default=0),
                ),
                ("total_votes", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductRatingAggregate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "average_rating",
                    models.DecimalField(
                        db_index=True, decimal_places=2, default=0, max_digits=3
                    ),
                ),
                ("total_count", models.PositiveIntegerField(db_index=True, default=0)),
                ("verified_count", models.PositiveIntegerField(default=0)),
                ("stars_5_count", models.PositiveIntegerField(default=0)),
                ("stars_4_count", models.PositiveIntegerField(default=0)),
                ("stars_3_count", models.PositiveIntegerField(default=0)),
                ("stars_2_count", models.PositiveIntegerField(default=0)),
                ("stars_1_count", models.PositiveIntegerField(default=0)),
                ("has_reviews", models.BooleanField(db_index=True, default=False)),
                ("last_rating_date", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("sku", models.CharField(db_index=True, max_length=100, unique=True)),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("stock_quantity", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProductVariantOption",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("value", models.CharField(db_index=True, max_length=100)),
                ("slug", models.SlugField()),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["sort_order", "value"],
            },
        ),
        migrations.CreateModel(
            name="ProductVariantType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("sort_order", models.PositiveIntegerField(db_index=True, default=0)),
            ],
            options={
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProductWatchlistItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("added_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "product_watchlist_items",
            },
        ),
        migrations.CreateModel(
            name="RatingHelpfulness",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_helpful", models.BooleanField()),
            ],
        ),
    ]
