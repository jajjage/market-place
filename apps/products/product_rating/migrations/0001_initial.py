# Generated by Django 5.1.7 on 2025-06-07 10:54

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("product_base", "0003_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProductRatingAggregate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "average_rating",
                    models.DecimalField(
                        db_index=True, decimal_places=2, default=0, max_digits=3
                    ),
                ),
                ("total_count", models.PositiveIntegerField(db_index=True, default=0)),
                ("verified_count", models.PositiveIntegerField(default=0)),
                ("stars_5_count", models.PositiveIntegerField(default=0)),
                ("stars_4_count", models.PositiveIntegerField(default=0)),
                ("stars_3_count", models.PositiveIntegerField(default=0)),
                ("stars_2_count", models.PositiveIntegerField(default=0)),
                ("stars_1_count", models.PositiveIntegerField(default=0)),
                ("has_reviews", models.BooleanField(db_index=True, default=False)),
                ("last_rating_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "product_rating_aggregate",
            },
        ),
        migrations.CreateModel(
            name="RatingHelpfulness",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_helpful", models.BooleanField()),
            ],
            options={
                "db_table": "product_rating_help",
            },
        ),
        migrations.CreateModel(
            name="ProductRating",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review", models.TextField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=200)),
                (
                    "is_verified_purchase",
                    models.BooleanField(db_index=True, default=False),
                ),
                ("purchase_date", models.DateTimeField(blank=True, null=True)),
                ("is_approved", models.BooleanField(db_index=True, default=True)),
                ("is_flagged", models.BooleanField(db_index=True, default=False)),
                ("flagged_reason", models.CharField(blank=True, max_length=100)),
                (
                    "helpful_count",
                    models.PositiveIntegerField(db_index=True, default=0),
                ),
                ("total_votes", models.PositiveIntegerField(default=0)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="product_base.product",
                    ),
                ),
            ],
            options={
                "db_table": "product_rating",
                "ordering": ["-created_at"],
            },
        ),
    ]
