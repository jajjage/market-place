# Generated by Django 5.1.7 on 2025-05-07 17:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("transactions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150)),
                ("last_name", models.CharField(blank=True, max_length=150)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("BUYER", "Buyer"),
                            ("SELLER", "Seller"),
                            ("ADMIN", "Admin"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("UNVERIFIED", "Unverified"),
                            ("PENDING", "Pending"),
                            ("VERIFIED", "Verified"),
                        ],
                        default="VERIFIED",
                        max_length=10,
                    ),
                ),
                ("temp_profile_picture_url", models.URLField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "core_user",
            },
        ),
        migrations.CreateModel(
            name="UserAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("shipping", "Shipping Address"),
                            ("billing", "Billing Address"),
                            ("both", "Shipping & Billing"),
                        ],
                        default="both",
                        max_length=10,
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
                ("street_address", models.CharField(max_length=255)),
                ("apartment", models.CharField(blank=True, max_length=50)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=100)),
                ("phone", models.CharField(max_length=20)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User Addresses",
                "db_table": "user_addresses",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("display_name", models.CharField(blank=True, max_length=100)),
                ("avatar_url", models.URLField(blank=True, null=True)),
                ("bio", models.TextField(blank=True)),
                ("email_verified", models.BooleanField(default=False)),
                ("phone_verified", models.BooleanField(default=False)),
                ("identity_verified", models.BooleanField(default=False)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("member_since", models.DateTimeField(auto_now_add=True)),
                ("last_active", models.DateTimeField(auto_now=True)),
                ("transactions_completed", models.PositiveIntegerField(default=0)),
                ("notification_email", models.BooleanField(default=True)),
                ("notification_sms", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User Profiles",
                "db_table": "user_profiles",
                "ordering": ["-member_since"],
            },
        ),
        migrations.CreateModel(
            name="UserRating",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comment", models.TextField(blank=True)),
                (
                    "from_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="given_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "transaction",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rating",
                        to="transactions.escrowtransaction",
                    ),
                ),
            ],
            options={
                "db_table": "user_ratings",
            },
        ),
        migrations.CreateModel(
            name="UserStore",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(unique=True)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="store_logos/"),
                ),
                (
                    "banner",
                    models.ImageField(
                        blank=True, null=True, upload_to="store_banners/"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("return_policy", models.TextField(blank=True)),
                ("shipping_policy", models.TextField(blank=True)),
                ("website", models.URLField(blank=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="store",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User Stores",
                "db_table": "user_stores",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(
                fields=["email", "is_active"], name="core_user_email_c0c03f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customuser",
            index=models.Index(
                fields=["first_name", "last_name"], name="core_user_first_n_7ed624_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="customuser",
            constraint=models.CheckConstraint(
                condition=models.Q(("email__isnull", False)),
                name="staff_email_not_null",
            ),
        ),
        migrations.AddIndex(
            model_name="useraddress",
            index=models.Index(fields=["user"], name="user_addres_user_id_0ee5d5_idx"),
        ),
        migrations.AddIndex(
            model_name="useraddress",
            index=models.Index(
                fields=["address_type"], name="user_addres_address_c0746f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="useraddress",
            unique_together={("user", "address_type")},
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(fields=["user"], name="user_profil_user_id_fbe33d_idx"),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["email_verified"], name="user_profil_email_v_0f3023_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprofile",
            index=models.Index(
                fields=["phone_verified"], name="user_profil_phone_v_9a98ae_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="userrating",
            constraint=models.UniqueConstraint(
                fields=("from_user", "transaction"), name="unique_rating"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userrating",
            unique_together={("from_user", "transaction")},
        ),
        migrations.AddIndex(
            model_name="userstore",
            index=models.Index(fields=["slug"], name="user_stores_slug_21a148_idx"),
        ),
        migrations.AddConstraint(
            model_name="userstore",
            constraint=models.UniqueConstraint(
                fields=("user", "slug"), name="unique_user_store"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userstore",
            unique_together={("user", "slug")},
        ),
    ]
